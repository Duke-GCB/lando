version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r devRequirements.txt
            python setup.py install
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            source venv/bin/activate
            python setup.py nosetests
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-setup-cache-{{ checksum "setup.py" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install
            pip install twine
            pip install wheel
      - save_cache:
          key: v1-setup-cache-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: create packages
          command: |
            . venv/bin/activate
            python setup.py bdist_wheel --universal
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
