# based on https://github.com/jupyter/docker-stacks/blob/master/examples/openshift/templates.json
apiVersion: v1
data:
  jupyter_notebook_config.py: "import os\n\npassword = os.environ.get('JUPYTER_NOTEBOOK_PASSWORD')\n\
    \nif password:\n    import notebook.auth\n    c.NotebookApp.password = notebook.auth.passwd(password)\n\
    \    del password\n    del os.environ['JUPYTER_NOTEBOOK_PASSWORD']\n\nimage_config_file\
    \ = '/home/jovyan/.jupyter/jupyter_notebook_config.py'\n\nif os.path.exists(image_config_file):\n\
    \    with open(image_config_file) as fp:\n        exec(compile(fp.read(), image_config_file,\
    \ 'exec'), globals())\n"
kind: ConfigMap
metadata:
  labels:
    app: {{ app_name }}
  name: {{ app_name }}-cfg
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ app_name }}
spec:
  rules:
  - host: {{ ingress_host }}
    http:
      paths:
      - backend:
          serviceName: {{ app_name }}
          servicePort: 8888
        path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ app_name }}
  name: {{ app_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ app_name }}
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
        app: {{ app_name }}
        deploymentconfig: {{ app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - start-notebook.sh
        - --config=/etc/jupyter/openshift/jupyter_notebook_config.py
        - --no-browser
        - --ip=0.0.0.0
        env:
        - name: "JUPYTER_NOTEBOOK_PASSWORD"
          value: "{{ notebook_password }}"
        - name: "JUPYTER_ENABLE_LAB"
          value: "true"
        image: {{ image_name }}
        name: jupyter-notebook
        ports:
        - containerPort: 8888
          protocol: TCP
        volumeMounts:
        - name: configs
          mountPath: "/etc/jupyter/openshift"
        - name: {{ output_data_pvc_name }}
          mountPath: {{ output_data_mount_path }}
        - name: {{ job_data_pvc_name }}
          mountPath: {{ job_data_mount_path }}
        - name: {{ system_data_pvc_name }}
          mountPath: {{ system_data_mount_path }}
        workingDir: /bespin
      securityContext:
        supplementalGroups:
        - 100
      volumes:
        - name: configs
          configMap:
            name: {{ app_name }}-cfg
        - name: {{ output_data_pvc_name }}
          persistentVolumeClaim:
            claimName: {{ output_data_pvc_name }}
        - name: {{ job_data_pvc_name }}
          persistentVolumeClaim:
            claimName: {{ job_data_pvc_name }}
        - name: {{ system_data_pvc_name }}
          persistentVolumeClaim:
            claimName: {{ system_data_pvc_name }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ app_name }}
  name: {{ app_name }}
spec:
  ports:
  - name: 8888-tcp
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: {{ app_name }}
    deploymentconfig: {{ app_name }}
  type: ClusterIP

